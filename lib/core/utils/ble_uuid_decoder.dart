/// Утилита для декодирования стандартных UUID BLE сервисов и характеристик
class BleUuidDecoder {
  /// Стандартные UUID сервисов (Bluetooth SIG Assigned Numbers)
  static const Map<String, String> _serviceUuids = {
    '1800': 'Generic Access',
    '1801': 'Generic Attribute',
    '1802': 'Immediate Alert',
    '1803': 'Link Loss',
    '1804': 'Tx Power',
    '1805': 'Current Time Service',
    '1806': 'Reference Time Update Service',
    '1807': 'Next DST Change Service',
    '1808': 'Glucose',
    '1809': 'Health Thermometer',
    '180A': 'Device Information',
    '180D': 'Heart Rate',
    '180E': 'Phone Alert Status Service',
    '180F': 'Battery Service',
    '1810': 'Blood Pressure',
    '1811': 'Alert Notification Service',
    '1812': 'Human Interface Device',
    '1813': 'Scan Parameters',
    '1814': 'Running Speed and Cadence',
    '1815': 'Automation IO',
    '1816': 'Cycling Speed and Cadence',
    '1818': 'Cycling Power',
    '1819': 'Location and Navigation',
    '181A': 'Environmental Sensing',
    '181B': 'Body Composition',
    '181C': 'User Data',
    '181D': 'Weight Scale',
    '181E': 'Bond Management',
    '181F': 'Continuous Glucose Monitoring',
    '1820': 'Internet Protocol Support',
    '1821': 'Indoor Positioning',
    '1822': 'Pulse Oximeter',
    '1823': 'HTTP Proxy',
    '1824': 'Transport Discovery',
    '1825': 'Object Transfer',
    '1826': 'Fitness Machine',
    '1827': 'Mesh Provisioning',
    '1828': 'Mesh Proxy',
    '1829': 'Reconnection Configuration',
    '182A': 'Insulin Delivery',
    '182B': 'Binary Sensor',
    '182C': 'Emergency Configuration',
    '182D': 'Reconnection Configuration',
    '182E': 'Authorization and Control',
    '183A': 'Audio Input Control',
    '183B': 'Volume Control',
    '183C': 'Volume Offset Control',
    '183D': 'Coordinated Set Identification',
    '183E': 'Device Time',
    '183F': 'Media Control',
    '1840': 'Generic Media Control',
    '1841': 'Constant Tone Extension',
    '1842': 'Telephone Bearer',
    '1843': 'Generic Telephone Bearer',
    '1844': 'Telephone Bearer',
    '1845': 'Microphone Control',
    '1846': 'Audio Stream Control',
    '1847': 'Broadcast Audio Scan',
    '1848': 'Published Audio Capabilities',
    '1849': 'Basic Audio Announcement',
    '184A': 'Broadcast Audio Announcement',
    '184B': 'Common Audio',
    '184C': 'Hearing Access',
    '184D': 'TMAS',
  };

  /// Стандартные UUID характеристик (Bluetooth SIG Assigned Numbers)
  static const Map<String, String> _characteristicUuids = {
    '2A00': 'Device Name',
    '2A01': 'Appearance',
    '2A02': 'Peripheral Privacy Flag',
    '2A03': 'Reconnection Address',
    '2A04': 'Peripheral Preferred Connection Parameters',
    '2A05': 'Service Changed',
    '2A06': 'Alert Level',
    '2A07': 'Tx Power Level',
    '2A08': 'Date Time',
    '2A09': 'Day of Week',
    '2A0A': 'Day Date Time',
    '2A0C': 'Exact Time 256',
    '2A0D': 'DST Offset',
    '2A0E': 'Time Zone',
    '2A0F': 'Local Time Information',
    '2A11': 'Time with DST',
    '2A12': 'Time Accuracy',
    '2A13': 'Time Source',
    '2A14': 'Reference Time Information',
    '2A16': 'Time Update Control Point',
    '2A17': 'Time Update State',
    '2A18': 'Glucose Measurement',
    '2A19': 'Battery Level',
    '2A1A': 'Temperature Measurement',
    '2A1B': 'Temperature Type',
    '2A1C': 'Intermediate Temperature',
    '2A1D': 'Temperature Measurement',
    '2A1E': 'Measurement Interval',
    '2A21': 'Boot Keyboard Input Report',
    '2A22': 'System ID',
    '2A23': 'Model Number String',
    '2A24': 'Serial Number String',
    '2A25': 'Firmware Revision String',
    '2A26': 'Hardware Revision String',
    '2A27': 'Software Revision String',
    '2A28': 'Manufacturer Name String',
    '2A29': 'IEEE 11073-20601 Regulatory Certification Data List',
    '2A2A': 'Current Time',
    '2A2B': 'Magnetic Declination',
    '2A2C': 'Scan Refresh',
    '2A2F': 'Boot Keyboard Output Report',
    '2A30': 'Boot Mouse Input Report',
    '2A31': 'Glucose Measurement Context',
    '2A32': 'Blood Pressure Measurement',
    '2A33': 'Intermediate Cuff Pressure',
    '2A34': 'Heart Rate Measurement',
    '2A35': 'Body Sensor Location',
    '2A36': 'Heart Rate Control Point',
    '2A37': 'Alert Status',
    '2A38': 'Ringer Control Point',
    '2A39': 'Ringer Setting',
    '2A3A': 'Alert Category ID Bit Mask',
    '2A3B': 'Alert Category ID',
    '2A3C': 'Alert Notification Control Point',
    '2A3D': 'Unread Alert Status',
    '2A3E': 'New Alert',
    '2A3F': 'Supported New Alert Category',
    '2A40': 'Supported Unread Alert Category',
    '2A41': 'Blood Pressure Feature',
    '2A42': 'HID Information',
    '2A43': 'Report Map',
    '2A44': 'HID Control Point',
    '2A45': 'Report',
    '2A46': 'Protocol Mode',
    '2A47': 'Scan Interval Window',
    '2A48': 'PnP ID',
    '2A49': 'Glucose Feature',
    '2A4A': 'Record Access Control Point',
    '2A4B': 'RSC Measurement',
    '2A4C': 'RSC Feature',
    '2A4D': 'SC Control Point',
    '2A4E': 'Aggregate',
    '2A4F': 'CSC Measurement',
    '2A50': 'CSC Feature',
    '2A51': 'Sensor Location',
    '2A52': 'PLX Spot-Check Measurement',
    '2A53': 'PLX Continuous Measurement',
    '2A54': 'PLX Features',
    '2A55': 'Cycling Power Measurement',
    '2A56': 'Cycling Power Vector',
    '2A57': 'Cycling Power Feature',
    '2A58': 'Cycling Power Control Point',
    '2A59': 'Location and Speed',
    '2A5A': 'Navigation',
    '2A5B': 'Position Quality',
    '2A5C': 'LN Feature',
    '2A5D': 'LN Control Point',
    '2A5E': 'Elevation',
    '2A5F': 'Pressure',
    '2A60': 'Temperature',
    '2A61': 'Humidity',
    '2A62': 'True Wind Speed',
    '2A63': 'True Wind Direction',
    '2A64': 'Apparent Wind Speed',
    '2A65': 'Apparent Wind Direction',
    '2A66': 'Gust Factor',
    '2A67': 'Pollen Concentration',
    '2A68': 'UV Index',
    '2A69': 'Irradiance',
    '2A6A': 'Rainfall',
    '2A6B': 'Wind Chill',
    '2A6C': 'Heat Index',
    '2A6D': 'Dew Point',
    '2A6E': 'Descriptor Value Changed',
    '2A6F': 'Aerobic Heart Rate Lower Limit',
    '2A70': 'Aerobic Heart Rate Upper Limit',
    '2A71': 'Aerobic Threshold',
    '2A72': 'Age',
    '2A73': 'Anaerobic Heart Rate Lower Limit',
    '2A74': 'Anaerobic Heart Rate Upper Limit',
    '2A75': 'Anaerobic Threshold',
    '2A76': 'Aerobic Heart Rate Upper Limit',
    '2A77': 'Date of Birth',
    '2A78': 'Date of Threshold Assessment',
    '2A79': 'Email Address',
    '2A7A': 'Fat Burn Heart Rate Lower Limit',
    '2A7B': 'Fat Burn Heart Rate Upper Limit',
    '2A7C': 'First Name',
    '2A7D': 'Five Zone Heart Rate Limits',
    '2A7E': 'Gender',
    '2A7F': 'Heart Rate Maximum',
    '2A80': 'Height',
    '2A81': 'Hip Circumference',
    '2A82': 'Last Name',
    '2A83': 'Maximum Recommended Heart Rate',
    '2A84': 'Resting Heart Rate',
    '2A85': 'Sport Type for Aerobic/Anaerobic Thresholds',
    '2A86': 'Three Zone Heart Rate Limits',
    '2A87': 'Two Zone Heart Rate Limits',
    '2A88': 'VO2 Max',
    '2A89': 'Waist Circumference',
    '2A8A': 'Weight',
    '2A8B': 'Database Change Increment',
    '2A8C': 'User Index',
    '2A8D': 'Body Composition Feature',
    '2A8E': 'Body Composition Measurement',
    '2A8F': 'Weight Measurement',
    '2A90': 'Weight Scale Feature',
    '2A91': 'User Control Point',
    '2A92': 'Magnetic Flux Density - 2D',
    '2A93': 'Magnetic Flux Density - 3D',
    '2A94': 'Language',
    '2A95': 'Barometric Pressure Trend',
    '2A96': 'Bond Management Control Point',
    '2A97': 'Bond Management Features',
    '2A98': 'Central Address Resolution',
    '2A99': 'CGM Measurement',
    '2A9A': 'CGM Feature',
    '2A9B': 'CGM Status',
    '2A9C': 'CGM Session Start Time',
    '2A9D': 'CGM Session Run Time',
    '2A9E': 'CGM Specific Ops Control Point',
    '2A9F': 'Indoor Positioning Configuration',
    '2AA0': 'Latitude',
    '2AA1': 'Longitude',
    '2AA2': 'Local North Coordinate',
    '2AA3': 'Local East Coordinate',
    '2AA4': 'Floor Number',
    '2AA5': 'Altitude',
    '2AA6': 'Uncertainty',
    '2AA7': 'Location Name',
    '2AA8': 'URI',
    '2AA9': 'HTTP Headers',
    '2AAA': 'HTTP Status Code',
    '2AAB': 'HTTP Entity Body',
    '2AAC': 'HTTP Control Point',
    '2AAD': 'HTTPS Security',
    '2AAE': 'TDS Control Point',
    '2AAF': 'OTS Feature',
    '2AB0': 'Object Name',
    '2AB1': 'Object Type',
    '2AB2': 'Object Size',
    '2AB3': 'Object First-Created',
    '2AB4': 'Object Last-Modified',
    '2AB5': 'Object ID',
    '2AB6': 'Object Properties',
    '2AB7': 'Object Action Control Point',
    '2AB8': 'Object List Control Point',
    '2AB9': 'Object List Filter',
    '2ABA': 'Object Changed',
    '2ABB': 'Resolvable Private Address Only',
    '2ABC': 'Fitness Machine Feature',
    '2ABD': 'Treadmill Data',
    '2ABE': 'Cross Trainer Data',
    '2ABF': 'Step Climber Data',
    '2AC0': 'Stair Climber Data',
    '2AC1': 'Rower Data',
    '2AC2': 'Indoor Bike Data',
    '2AC3': 'Training Status',
    '2AC4': 'Supported Speed Range',
    '2AC5': 'Supported Inclination Range',
    '2AC6': 'Supported Resistance Level Range',
    '2AC7': 'Supported Heart Rate Range',
    '2AC8': 'Supported Power Range',
    '2AC9': 'Fitness Machine Control Point',
    '2ACA': 'Fitness Machine Status',
    '2ACB': 'Mesh Provisioning Data In',
    '2ACC': 'Mesh Provisioning Data Out',
    '2ACD': 'Mesh Proxy Data In',
    '2ACE': 'Mesh Proxy Data Out',
    '2ACF': 'Average Current',
    '2AD0': 'Average Voltage',
    '2AD1': 'Boolean',
    '2AD2': 'Chromatic Distance From Planckian',
    '2AD3': 'Chromaticity Coordinates',
    '2AD4': 'Chromaticity in CCT And DUV Values',
    '2AD5': 'Chromaticity Tolerance',
    '2AD6': 'CIE 13.3-1995 Color Rendering Index',
    '2AD7': 'Coefficient',
    '2AD8': 'Correlated Color Temperature',
    '2AD9': 'Count 16',
    '2ADA': 'Count 24',
    '2ADB': 'Country Code',
    '2ADC': 'Date UTC',
    '2ADD': 'Electric Current',
    '2ADE': 'Electric Current Range',
    '2ADF': 'Electric Current Specification',
    '2AE0': 'Electric Current Statistics',
    '2AE1': 'Energy',
    '2AE2': 'Energy In A Period Of Day',
    '2AE3': 'Event Statistics',
    '2AE4': 'Fixed String 16',
    '2AE5': 'Fixed String 24',
    '2AE6': 'Fixed String 36',
    '2AE7': 'Fixed String 8',
    '2AE8': 'Generic Level',
    '2AE9': 'Global Trade Item Number',
    '2AEA': 'Illuminance',
    '2AEB': 'Illuminance Measurement',
    '2AEC': 'Illuminance Range',
    '2AED': 'Luminous Efficacy',
    '2AEE': 'Luminous Energy',
    '2AEF': 'Luminous Exposure',
    '2AF0': 'Luminous Flux',
    '2AF1': 'Luminous Intensity',
    '2AF2': 'Mass Flow',
    '2AF3': 'Perceived Lightness',
    '2AF4': 'Percentage 8',
    '2AF5': 'Power',
    '2AF6': 'Power Specification',
    '2AF7': 'Relative Runtime In A Current Range',
    '2AF8': 'Relative Runtime In A Generic Level Range',
    '2AF9': 'Relative Value In A Voltage Range',
    '2AFA': 'Relative Value In An Illuminance Range',
    '2AFB': 'Relative Value In A Period Of Day',
    '2AFC': 'Relative Value In A Temperature Range',
    '2AFD': 'Temperature 8',
    '2AFE': 'Temperature 8 In A Period Of Day',
    '2AFF': 'Temperature 8 Statistics',
    '2B00': 'Temperature Range',
    '2B01': 'Temperature Statistics',
    '2B02': 'Time Decihour 8',
    '2B03': 'Time Exponential 8',
    '2B04': 'Time Hour 24',
    '2B05': 'Time Millisecond 24',
    '2B06': 'Time Second 16',
    '2B07': 'Time Second 8',
    '2B08': 'Voltage',
    '2B09': 'Voltage Specification',
    '2B0A': 'Voltage Statistics',
    '2B0B': 'Volume Flow',
    '2B0C': 'Chromaticity Coordinate',
    '2B0D': 'RC Feature',
    '2B0E': 'RC Settings',
    '2B0F': 'Reconnection Configuration Control Point',
    '2B10': 'IDD Status Changed',
    '2B11': 'IDD Status',
    '2B12': 'IDD Annunciation Status',
    '2B13': 'IDD Features',
    '2B14': 'IDD Status Reader Control Point',
    '2B15': 'IDD Command Control Point',
    '2B16': 'IDD Command Data',
    '2B17': 'IDD Record Access Control Point',
    '2B18': 'IDD History Data',
    '2B19': 'Client Supported Features',
    '2B1A': 'Database Hash',
    '2B1B': 'BSS Control Point',
    '2B1C': 'BSS Response',
    '2B1D': 'Emergency ID',
    '2B1E': 'Emergency Text',
    '2B1F': 'Enhanced Height',
    '2B20': 'Enhanced Speed',
    '2B21': 'Enhanced Latitude',
    '2B22': 'Enhanced Longitude',
    '2B23': 'Date of Last Calibration',
    '2B24': 'Date of Next Calibration',
    '2B25': 'Enhanced Power Specification',
    '2B26': 'Date of Last Calibration',
    '2B27': 'Date of Next Calibration',
    '2B28': 'Date of Last Calibration',
    '2B29': 'Date of Next Calibration',
    '2B2A': 'LE GATT Security Levels',
    '2B2B': 'UART',
    '2B2C': 'Eddy Current Brake',
    '2B2D': 'Eddy Current Brake With Angle',
    '2B2E': 'Eddy Current Brake With Linear Actuator',
    '2B2F': 'Exercise Type',
    '2B30': 'Gym Equipment Type',
    '2B31': 'Gym Equipment Type',
    '2B32': 'Bike Trainer Type',
    '2B33': 'Bike Trainer Type',
    '2B34': 'Bike Trainer Type',
    '2B35': 'Bike Trainer Type',
    '2B36': 'Bike Trainer Type',
    '2B37': 'Bike Trainer Type',
    '2B38': 'Bike Trainer Type',
    '2B39': 'Bike Trainer Type',
    '2B3A': 'Bike Trainer Type',
    '2B3B': 'Bike Trainer Type',
    '2B3C': 'Bike Trainer Type',
    '2B3D': 'Bike Trainer Type',
    '2B3E': 'Bike Trainer Type',
    '2B3F': 'Bike Trainer Type',
    '2B40': 'Bike Trainer Type',
    '2B41': 'Bike Trainer Type',
    '2B42': 'Bike Trainer Type',
    '2B43': 'Bike Trainer Type',
    '2B44': 'Bike Trainer Type',
    '2B45': 'Bike Trainer Type',
    '2B46': 'Bike Trainer Type',
    '2B47': 'Bike Trainer Type',
    '2B48': 'Bike Trainer Type',
    '2B49': 'Bike Trainer Type',
    '2B4A': 'Bike Trainer Type',
    '2B4B': 'Bike Trainer Type',
    '2B4C': 'Bike Trainer Type',
    '2B4D': 'Bike Trainer Type',
    '2B4E': 'Bike Trainer Type',
    '2B4F': 'Bike Trainer Type',
    '2B50': 'Bike Trainer Type',
    '2B51': 'Bike Trainer Type',
    '2B52': 'Bike Trainer Type',
    '2B53': 'Bike Trainer Type',
    '2B54': 'Bike Trainer Type',
    '2B55': 'Bike Trainer Type',
    '2B56': 'Bike Trainer Type',
    '2B57': 'Bike Trainer Type',
    '2B58': 'Bike Trainer Type',
    '2B59': 'Bike Trainer Type',
    '2B5A': 'Bike Trainer Type',
    '2B5B': 'Bike Trainer Type',
    '2B5C': 'Bike Trainer Type',
    '2B5D': 'Bike Trainer Type',
    '2B5E': 'Bike Trainer Type',
    '2B5F': 'Bike Trainer Type',
    '2B60': 'Bike Trainer Type',
    '2B61': 'Bike Trainer Type',
    '2B62': 'Bike Trainer Type',
    '2B63': 'Bike Trainer Type',
    '2B64': 'Bike Trainer Type',
    '2B65': 'Bike Trainer Type',
    '2B66': 'Bike Trainer Type',
    '2B67': 'Bike Trainer Type',
    '2B68': 'Bike Trainer Type',
    '2B69': 'Bike Trainer Type',
    '2B6A': 'Bike Trainer Type',
    '2B6B': 'Bike Trainer Type',
    '2B6C': 'Bike Trainer Type',
    '2B6D': 'Bike Trainer Type',
    '2B6E': 'Bike Trainer Type',
    '2B6F': 'Bike Trainer Type',
    '2B70': 'Bike Trainer Type',
    '2B71': 'Bike Trainer Type',
    '2B72': 'Bike Trainer Type',
    '2B73': 'Bike Trainer Type',
    '2B74': 'Bike Trainer Type',
    '2B75': 'Bike Trainer Type',
    '2B76': 'Bike Trainer Type',
    '2B77': 'Bike Trainer Type',
    '2B78': 'Bike Trainer Type',
    '2B79': 'Bike Trainer Type',
    '2B7A': 'Bike Trainer Type',
    '2B7B': 'Bike Trainer Type',
    '2B7C': 'Bike Trainer Type',
    '2B7D': 'Bike Trainer Type',
    '2B7E': 'Bike Trainer Type',
    '2B7F': 'Bike Trainer Type',
    '2B80': 'Bike Trainer Type',
    '2B81': 'Bike Trainer Type',
    '2B82': 'Bike Trainer Type',
    '2B83': 'Bike Trainer Type',
    '2B84': 'Bike Trainer Type',
    '2B85': 'Bike Trainer Type',
    '2B86': 'Bike Trainer Type',
    '2B87': 'Bike Trainer Type',
    '2B88': 'Bike Trainer Type',
    '2B89': 'Bike Trainer Type',
    '2B8A': 'Bike Trainer Type',
    '2B8B': 'Bike Trainer Type',
    '2B8C': 'Bike Trainer Type',
    '2B8D': 'Bike Trainer Type',
    '2B8E': 'Bike Trainer Type',
    '2B8F': 'Bike Trainer Type',
    '2B90': 'Bike Trainer Type',
    '2B91': 'Bike Trainer Type',
    '2B92': 'Bike Trainer Type',
    '2B93': 'Bike Trainer Type',
    '2B94': 'Bike Trainer Type',
    '2B95': 'Bike Trainer Type',
    '2B96': 'Bike Trainer Type',
    '2B97': 'Bike Trainer Type',
    '2B98': 'Bike Trainer Type',
    '2B99': 'Bike Trainer Type',
    '2B9A': 'Bike Trainer Type',
    '2B9B': 'Bike Trainer Type',
    '2B9C': 'Bike Trainer Type',
    '2B9D': 'Bike Trainer Type',
    '2B9E': 'Bike Trainer Type',
    '2B9F': 'Bike Trainer Type',
    '2BA0': 'Bike Trainer Type',
    '2BA1': 'Bike Trainer Type',
    '2BA2': 'Bike Trainer Type',
    '2BA3': 'Bike Trainer Type',
    '2BA4': 'Bike Trainer Type',
    '2BA5': 'Bike Trainer Type',
    '2BA6': 'Bike Trainer Type',
    '2BA7': 'Bike Trainer Type',
    '2BA8': 'Bike Trainer Type',
    '2BA9': 'Bike Trainer Type',
    '2BAA': 'Bike Trainer Type',
    '2BAB': 'Bike Trainer Type',
    '2BAC': 'Bike Trainer Type',
    '2BAD': 'Bike Trainer Type',
    '2BAE': 'Bike Trainer Type',
    '2BAF': 'Bike Trainer Type',
    '2BB0': 'Bike Trainer Type',
    '2BB1': 'Bike Trainer Type',
    '2BB2': 'Bike Trainer Type',
    '2BB3': 'Bike Trainer Type',
    '2BB4': 'Bike Trainer Type',
    '2BB5': 'Bike Trainer Type',
    '2BB6': 'Bike Trainer Type',
    '2BB7': 'Bike Trainer Type',
    '2BB8': 'Bike Trainer Type',
    '2BB9': 'Bike Trainer Type',
    '2BBA': 'Bike Trainer Type',
    '2BBB': 'Bike Trainer Type',
    '2BBC': 'Bike Trainer Type',
    '2BBD': 'Bike Trainer Type',
    '2BBE': 'Bike Trainer Type',
    '2BBF': 'Bike Trainer Type',
    '2BC0': 'Bike Trainer Type',
    '2BC1': 'Bike Trainer Type',
    '2BC2': 'Bike Trainer Type',
    '2BC3': 'Bike Trainer Type',
    '2BC4': 'Bike Trainer Type',
    '2BC5': 'Bike Trainer Type',
    '2BC6': 'Bike Trainer Type',
    '2BC7': 'Bike Trainer Type',
    '2BC8': 'Bike Trainer Type',
    '2BC9': 'Bike Trainer Type',
    '2BCA': 'Bike Trainer Type',
    '2BCB': 'Bike Trainer Type',
    '2BCC': 'Bike Trainer Type',
    '2BCD': 'Bike Trainer Type',
    '2BCE': 'Bike Trainer Type',
    '2BCF': 'Bike Trainer Type',
    '2BD0': 'Bike Trainer Type',
    '2BD1': 'Bike Trainer Type',
    '2BD2': 'Bike Trainer Type',
    '2BD3': 'Bike Trainer Type',
    '2BD4': 'Bike Trainer Type',
    '2BD5': 'Bike Trainer Type',
    '2BD6': 'Bike Trainer Type',
    '2BD7': 'Bike Trainer Type',
    '2BD8': 'Bike Trainer Type',
    '2BD9': 'Bike Trainer Type',
    '2BDA': 'Bike Trainer Type',
    '2BDB': 'Bike Trainer Type',
    '2BDC': 'Bike Trainer Type',
    '2BDD': 'Bike Trainer Type',
    '2BDE': 'Bike Trainer Type',
    '2BDF': 'Bike Trainer Type',
    '2BE0': 'Bike Trainer Type',
    '2BE1': 'Bike Trainer Type',
    '2BE2': 'Bike Trainer Type',
    '2BE3': 'Bike Trainer Type',
    '2BE4': 'Bike Trainer Type',
    '2BE5': 'Bike Trainer Type',
    '2BE6': 'Bike Trainer Type',
    '2BE7': 'Bike Trainer Type',
    '2BE8': 'Bike Trainer Type',
    '2BE9': 'Bike Trainer Type',
    '2BEA': 'Bike Trainer Type',
    '2BEB': 'Bike Trainer Type',
    '2BEC': 'Bike Trainer Type',
    '2BED': 'Bike Trainer Type',
    '2BEE': 'Bike Trainer Type',
    '2BEF': 'Bike Trainer Type',
    '2BF0': 'Bike Trainer Type',
    '2BF1': 'Bike Trainer Type',
    '2BF2': 'Bike Trainer Type',
    '2BF3': 'Bike Trainer Type',
    '2BF4': 'Bike Trainer Type',
    '2BF5': 'Bike Trainer Type',
    '2BF6': 'Bike Trainer Type',
    '2BF7': 'Bike Trainer Type',
    '2BF8': 'Bike Trainer Type',
    '2BF9': 'Bike Trainer Type',
    '2BFA': 'Bike Trainer Type',
    '2BFB': 'Bike Trainer Type',
    '2BFC': 'Bike Trainer Type',
    '2BFD': 'Bike Trainer Type',
    '2BFE': 'Bike Trainer Type',
    '2BFF': 'Bike Trainer Type',
  };

  /// Декодирует UUID сервиса в читаемое название
  static String decodeServiceUuid(String uuid) {
    // Извлекаем короткий UUID (последние 4 символа после дефисов)
    final shortUuid = _extractShortUuid(uuid);
    if (shortUuid == null) return uuid;
    
    return _serviceUuids[shortUuid.toUpperCase()] ?? uuid;
  }

  /// Декодирует UUID характеристики в читаемое название
  static String decodeCharacteristicUuid(String uuid) {
    // Извлекаем короткий UUID (последние 4 символа после дефисов)
    final shortUuid = _extractShortUuid(uuid);
    if (shortUuid == null) return uuid;
    
    return _characteristicUuids[shortUuid.toUpperCase()] ?? uuid;
  }

  /// Извлекает короткий UUID из полного UUID
  /// Например: "00001800-0000-1000-8000-00805f9b34fb" -> "1800"
  static String? _extractShortUuid(String uuid) {
    // Убираем дефисы и пробелы
    final cleaned = uuid.replaceAll('-', '').replaceAll(' ', '').toUpperCase();
    
    // Проверяем стандартный формат Bluetooth SIG UUID
    // Если это стандартный UUID, короткая часть находится в позиции 4-8
    if (cleaned.length >= 8 && cleaned.startsWith('0000')) {
      return cleaned.substring(4, 8);
    }
    
    // Если UUID уже короткий (4 символа)
    if (cleaned.length == 4) {
      return cleaned;
    }
    
    // Если UUID имеет формат без префикса
    if (cleaned.length >= 4) {
      final last4 = cleaned.substring(cleaned.length - 4);
      // Проверяем, что это hex символы
      if (RegExp(r'^[0-9A-F]{4}$').hasMatch(last4)) {
        return last4;
      }
    }
    
    return null;
  }

  /// Форматирует UUID для отображения
  static String formatUuid(String uuid) {
    final decoded = decodeServiceUuid(uuid);
    if (decoded != uuid) {
      return '$decoded ($uuid)';
    }
    return uuid;
  }

  /// Форматирует UUID характеристики для отображения
  static String formatCharacteristicUuid(String uuid) {
    final decoded = decodeCharacteristicUuid(uuid);
    if (decoded != uuid) {
      return '$decoded ($uuid)';
    }
    return uuid;
  }

  /// Парсит свойства характеристики в читаемый формат
  static String formatCharacteristicProperties(dynamic properties) {
    if (properties == null) return 'Нет свойств';
    
    final propsStr = properties.toString();
    
    // Пытаемся извлечь свойства из строки вида:
    // CharacteristicProperties{broadcast: false, read: true, writeWithoutResponse: false, ...}
    final propertiesList = <String>[];
    
    if (propsStr.contains('read: true')) propertiesList.add('Чтение');
    if (propsStr.contains('write: true')) propertiesList.add('Запись');
    if (propsStr.contains('writeWithoutResponse: true')) propertiesList.add('Запись без ответа');
    if (propsStr.contains('notify: true')) propertiesList.add('Уведомления');
    if (propsStr.contains('indicate: true')) propertiesList.add('Индикация');
    if (propsStr.contains('broadcast: true')) propertiesList.add('Трансляция');
    if (propsStr.contains('authenticatedSignedWrites: true')) propertiesList.add('Подписанная запись');
    if (propsStr.contains('extendedProperties: true')) propertiesList.add('Расширенные свойства');
    
    if (propertiesList.isEmpty) {
      return 'Нет доступных свойств';
    }
    
    return propertiesList.join(', ');
  }
}

